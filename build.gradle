import java.nio.file.Paths

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "net.kyori.blossom" version "1.2.0"
}

group 'tv.quaint'
version '1.9-SNAPSHOT'

project.ext {
    def dir = layout.buildDirectory.dir('C:\\Users\\nitra\\Dropbox\\Streamline\\Project\\Streamline\\api\\build\\libs')
    File[] files = dir.get().getAsFile().listFiles();
    File dependFile = files[0]
    fileLocation = dependFile.toPath().toString();
    def dir2 = layout.buildDirectory.dir('C:\\Users\\nitra\\Dropbox\\Streamline\\Project\\Streamline\\backend-api\\build\\libs')
    File[] files2 = dir2.get().getAsFile().listFiles();
    File dependFile2 = files2[0]
    fileLocation2 = dependFile2.toPath().toString();
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly "net.luckperms:api:5.4"
    compileOnly files("${fileLocation}")
    annotationProcessor files("${fileLocation}")
    compileOnly files("${fileLocation2}")
    annotationProcessor files("${fileLocation2}")
    compileOnly files("./libs/CMIAPI.jar")
    compileOnly files("./libs/EssentialsX.jar")
}

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

jar.enabled = false
shadowJar {
    relocate 'com.github.stefvanschie.inventoryframework', 'com.dndcraft.quaint.crpified.inventoryframework'

    manifest {
        attributes 'Plugin-Class': 'tv.quaint.StreamlineUtilities'
        attributes 'Plugin-Id': 'streamline-utilities'
        attributes 'Plugin-Version': version
        attributes 'Plugin-Requires': ''
        attributes 'Plugin-Dependencies': ''
        attributes 'Plugin-Description': 'Utility Module for StreamlineCore.'
        attributes 'Plugin-Provider': 'Quaint'
        attributes 'Plugin-License': 'Apache License 2.0'
    }

    destinationDirectory  = file("$rootDir/build/libs")
    archiveClassifier.set('')
}

artifacts {
    archives shadowJar
}

blossom {
    replaceToken '${version}', project.version, 'src/main/resources/plugin.yml'
}